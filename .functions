#! /bin/bash -e

# list all user-defined functions
function listUdf() {
	declare -F | grep "udf"
}

# user-defined bash functions

# create zip folder of all files stored in encrypted volume - Keys
function udfArchiveDriveKeys() {
	VERSION=BBKing
	mv "/Volumes/Keys/keysArchive_$VERSION.zip" "/Volumes/Keys/keysArchive_${VERSION}_OLD.zip"
	zip -er /Volumes/Keys/keysArchive_$VERSION.zip /Volumes/Keys/
}

# reloadDefaultSSH key file (necessary after OS patch, etc.)
function udfAudio-fix() {
	sudo kextunload /System/Library/Extensions/AppleHDA.kext
	sudo kextload /System/Library/Extensions/AppleHDA.kext
	echo -e "\n*** processing complete - ${BASH_SOURCE[0]} ***"
}

# unmount encrypted volume - Keys
function udfDetachDriveKeys() {
        hdiutil detach ~/keys_clapton.dmg
}

# connect to Docker-Machine environment (arg1)
function udfDme() {
	eval $(docker-machine env ${1})
	docker-machine active
}

# mount encrypted volume - Keys
function udfMountDriveKeys() {
	hdiutil attach ~/keys_clapton.dmg
}

# launch RabbitMQ server with increased per-user limit on open files
function launchRabbitMQ() {
		ulimit -S -n 4096
		rabbitmq-server
}

# bounce mDNSResponder and cycle dnsmasq, used when DNS resolution not working 
# on Mac
function udfBounceDns() {
  sudo launchctl unload -w /System/Library/LaunchDaemons/com.apple.mDNSResponder.plist
  sudo launchctl load -w /System/Library/LaunchDaemons/com.apple.mDNSResponder.plist
  sudo launchctl stop homebrew.mxcl.dnsmasq
  sudo launchctl start homebrew.mxcl.dnsmasq
}
